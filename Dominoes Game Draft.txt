Dominoes Game 
	data structures:
	
		piece: (int, int)

		player: int[0-3]

		player_hand: list of pieces

		move: (piece,r|l) | None
			a piece and which end to extend (pience, l) for left or (piece|r) for right. In case no suitable pieces are held by the player, it's None
		
		game_state:
			played_set: set of pieces
			left_end: int
			right_end: int
			next_player: player
			history: list of (player, move)

	methods:

		next_move(game_state, player_hand) -> move
		apply_move(game_state, move) -> game_state
		has_game_ended(game_state, list of player_hand) -> bool
		score(game_state, list of player_hands, player) -> int

		draw_hand(list of pieces) -> player_hand, list of pieces
			returns a draw of 10 random pieces from the input list and returns the hand of 10 and the remaining pieces